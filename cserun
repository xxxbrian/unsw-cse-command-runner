#!/bin/bash

exit_with_error() {
    if [ $? -ne 0 ]; then
        echo -ne "\nðŸš«Connection to the server failed.\n"
        exit 1
    fi
}

echo "
  ____ ____  _____   ____                              
 / ___/ ___|| ____| |  _ \ _   _ _ __  _ __   ___ _ __ 
| |   \___ \|  _|   | |_) | | | | '_ \| '_ \ / _ \ '__|
| |___ ___) | |___  |  _ <| |_| | | | | | | |  __/ |   
 \____|____/|_____| |_| \_\\\__,_|_| |_|_| |_|\___|_|   
                                by @Bojin Li"


timestamp=$((`date '+%s'`*1000+`date '+%N'`/1000000))
USERNAME="z5111111"
SSH_HOST="cse.unsw.edu.au"
WORKING_DIRECTORY="~/cserunner/sync/$timestamp"
PASSWORD="zpassword"

if [ $# -eq 0 ]; then
    echo "Usage: ./cserun.sh <command>"
    echo "Example: ./cserun.sh 2041 classrun -sturec"
    exit 1
fi

echo
echo "ðŸ”¥ Check Dependencies: "
echo -ne "\tðŸ”Ž Checking Local..."
# check if sshpass is installed
if ! [ -x "$(command -v sshpass)" ]; then
    echo -e "\r\tðŸŸ  Installing sshpass..."
    if [ "$(uname)" == "Darwin" ]; then
        # check if brew is installed
        if ! [ -x "$(command -v brew)" ]; then
            echo "\tâš  Homebrew is not installed. Installing..."
            /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        fi
        curl -L https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb > sshpass.rb
        brew install sshpass.rb
        rm sshpass.rb
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        sudo apt-get install sshpass
    else
        echo -e "\r\tâ›” Unsupported OS ($(uname -s))"
        exit 1
    fi
    echo -e "\r\tâœ… Sshpass Install Success"
else
    sleep 2
    echo -e "\r\tâœ… Local Dependent Environment Checked."
fi

echo -ne "\tðŸ”Ž Checking Remote..."
sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$SSH_HOST "test -d $WORKING_DIRECTORY || mkdir -p $WORKING_DIRECTORY" > /dev/null 2>&1
exit_with_error
sleep 2
echo -e "\r\tâœ… Remote Dependent Environment Checked."

sleep 1
echo "âš¡ Synchronization: "
sleep 1
echo -e "\tðŸ”Ž Syncing Files to Remote..."
#sshpass -p $PASSWORD scp -r $(pwd)/* $USERNAME@$SSH_HOST:$WORKING_DIRECTORY > /dev/null 2>&1
sshpass -p $PASSWORD rsync -aq --exclude='.git' --exclude='venv' $(pwd)/* $USERNAME@$SSH_HOST:$WORKING_DIRECTORY > /dev/null 2>&1
exit_with_error
for file in $(ls); do
    echo -e "\tâœ… $file"
    sleep 0.2
done

echo
echo "ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€ Executing Command ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€"
echo
sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$SSH_HOST "cd $WORKING_DIRECTORY && $*"
